Hallo Leute, ich habe nun auch ein Programm für den Korg nanoKontrol2 (nK2) geschreiben, mit dem der Mixer (möglicherweise später mehr) bedient werden kann.

<b>Änderungen in Version 1.2</b>
* eignes Korg Kontrol Editor-Mappinge-File: FL Studio - nK2_Knob1-8.nktrl2_data
  copy it to ..\FL-Studio\System\Hardware specific\Korg nanoKONTROL 2\
  Load it in Korg Kontrol Editor and write Data to nanoKontrol2-device Communication\Write Scene Data
* You can control the Master-MixerTrack (Id=0)

Das Programm ordnet die 8 Controll-Groups des nK2, jeweils passend Mixer-Tracks zu. Das heißt, der Solo-Button schaltet den zugeordnen Mixer-Track auf solo [on/off].
Mute=mute, Rec=Arm disk recording. Der Drehknopf kontrolliert das Panning, der Schiebe-Regler das Volume.
Beim Start des Scrip werden die ersten 8 Mixer-Tracks zu geordnet. Mit dem [Track Rew/Track FF] werden die selektierten Mixer-Tracks um 8 Positionen nach links/rechts verschoben,
Mit [Marker Rew/Marker FF] kann man den selektieretn Bereich schrittweise verschieben. Mit [set] kann man die Schrittweite einstellen, Vorgabewerte [1,2,4,10,16,20,25,50], die kann man aber ändern. Die jeweils angesteuerten 8 Mixer-Tracks werden durch eine Namenspräfix gekennzeichnet, ("[1] =", "[2] =", "[3] =", "[4] = "," [5] = "," [6] = "," [7] = "," [8]).
Beim Verlassen des Bereiches werden dies Namensänderungen wieder entfernt und die nächsten 8 markiert. Beim Beenden des Scripts sollten alle vom Programm vorgenommen Namensänderung entfernt werden. Will man das manuell tun, geht das mit dem Button [cycle]. Der entfernt also alle Namenspräfix ("[1] =", "[2] =", "[3] =", "[4] = "," [5] = "," [6] = "," [7] = "," [8]).
Die ausgewählten MixerTracks werden auch als HintMsg angezeigt und auf das Ereichen des Anfang/Ende der MixerTracks hingewiesen.

Mit den Transport-Button: [Rew, FF, Stop, Play, Rec] werden die entsprechdende Playlist-Funktionen [on/off] geschaltet.

Das Script besteht aus 5 Dateien. Die eigentlich device-Datei "device_Mixer Control.py" beinhaltet die entsprechnden Funktions- und Actions-Aufrufe und muss ins entsprechnde FL-Script-Verzeichnis kopiert werden "...\Image-Line\Data\FL Studio\Settings\Hardware\Korg nanoKontrol", der Scriptname ist "# name=nanoKontrol2 - Mixer V1 (Lonz)"
Das ist das Script, das man in den Midi-Einstellungen, dem nanoKntrol2 zuweisen muß. Im Unterverzeichnis nK2 ("...\Image-Line\Data\FL Studio\Settings\Hardware\Korg nanoKontrol\nK2"}, gibt es weitere Dateien.

nK2_Classes.py: Bildet das nanoKontrol2 (class TNK_Control: ...) und dessen Elemente, als Sofware-Klassen nach. Dies soll mir das Ansprechen der verschiednen Buttons, beim Programmieren erleichtern.

nK2_FL.py: Erzeugt eine Instanz (NK_FL) von class TNK_Control, mit den Werten der "Korg Kontrol Editor - FL Studio - nanoKontrol2_nktrl2_data".
	Und hier gibt es ein Problem. Der Button Track Rew hat die CC-Nr=0 und Werte 64/63 für off/on, Track FF hat die CC-Nr=0 und Werte 64/65 für off/on. Der erste Knob fürs Panning hat ebenfalls CC-Nr=0 (das ist doof) und den Wertebereich 0-127. Befindet sich dieser Regler nun im Bereich 63-65 kann das Programm nicht entscheiden, welcher Button tatsächlich betätigt wurde und es kommt ggf. zu Fehlbedienung, falls man genau in dem Moment die Buttons wechselt. Man kann das Problem durch Betätigen eines anderen Buttons lösen.
	In einer weiteren Scrip-Version, will ich mit einer eignen Korg Kontrol Editor - Mapping-Datei arbeiten, um das Problem zu beseitigen. Dann benötigt man zum Script aber aich die Mapping-Datei, bzw. die Einstellungen.

userPara.py: Enthält ein paar Parameter, die ihr ändern könnt.
	Flag_No_Sel_Names=False: Setzt ihr diesen Wert auf True, erzeugt das Scrip keine Namenspräfix ("[1] =", "[2] =", "[3] =", "[4] = "," [5] = "," [6] = "," [7] = "," [8]).
		falls euch das lieber ist.
	
	Reg_Snap = False/True: Wird der Bereich der anzusteuernden MixerTracks verschoben, stimmen die Positionen der Regler (Panning und Volume)des nK2 wahrscheinlich nicht, mit der Position des MixerTrack in FL Studio überein. 
		Mit Reg_Snap = True greift der regler erst, wenn er nahe beim FL Studio-Wert ist und man vermeidet Wertsprünge. 
		Allerdings regelt man ggf. auch ins Leere. Mit Reg_Snap = False folgt FL Studio sofort dem Regler. Es gibt ggf. Sprünge, aber man hat direkt die Kontrolle. (Ich bevorzuge False).
		
	lsSPT_Values = [1,2,4,10,16,20,25,50]: Dies sind die Schrittweiten, die man mit [set] einstellen kann. Diese könnt ihr frei wählen, sofern die Python-List-Syntax stimmt.
		Einge Beispiel sind in userPara.py angegeben. Es sollte immer nur eine Liste aktiv sein. alle anderen mit # bitte auskommentieren.
	
FL Studio - nK2_Knob1-8.nktrl2_data: Mapping-File for Korg Kontrol Editor
	
Außerdem entält das Unterverzeichnis ...\nK2 weitere Dateien, die mit dem Script nichst zu tun haben, aber als Information dienen sollen.
	Info_ger.txt \Info_eng.txt 										diese Datei in Deutsch oder englisch
	FL Studio - nK2_Knob1-8.nktrl2_data.png.txt 						Werte der Mapping-Datei, als Text
	FL Studio - nK2_Knob1-8.nktrl2_data.png.png	Werte der Mapping-Datei, als Bild
	